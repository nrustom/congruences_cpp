int p = 5, m = 2, w = 2;
int i = 0;
int l = 19;
//mod_sym_t ms_0 = {i, 1, 0, 0, 1}, ms_1 = {w-i, 0, 1, 1, 0};
mod_sym_t ms_0 = {i, 1, 3, 0, 1};
//ModSymPoly P0(p, m, w, ms_0), P1(p, m, w, ms_1);
//ModSymPoly P = P0 - P1;
ModSymPoly P(p, m, w, ms_0);

uint64 t0 = time();
ModSymPoly T = P.hecke(l, H_MEREL);
T = T.hecke(l, H_MEREL);
T = T.hecke(l, H_MEREL);
T = T.hecke(l, H_MEREL);
uint64 t1 = time();
cout << "P = " << P.str() << "\n";
cout << "T = " << T.str() << "\n";
cout << "time = " << t1 - t0 << "\n";
//gl2_t A = {0,1,2,0};	
//ModSymPoly Q = 2*P.sig_rel() + P.act(A).tau_rel();
//cout << "T - Q = " << (T - Q).str() << "\n";
