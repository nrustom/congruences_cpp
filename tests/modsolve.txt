	//int p = 7, m = 4, l = 29, mod = power(p, m);
	//int p = 5, m = 5, l = 19, mod = power(p, m);
	int p = 3, m = 4, l = 2, mod = power(p, m);
	int phi = power(p, m-1)*(p-1);
	int i0 = 0, j0 = 0, w = i0 + j0; 
	
	mod_sym_t ms_0 = {i0, 1, 0, 0, 1}, ms_1 = {w-i0, 0, 1, 1, 0};
	ModSymPoly P0(p, m, w, ms_0), P1(p, m, w, ms_1);
	ModSymPoly P = P0 - P1;
	
	vector<int> pol;
	//pol.push_back(0); pol.push_back(250); pol.push_back(25); pol.push_back(10); pol.push_back(1); 
	//X^4 + 10*X^3 + 25*X^2 + 250*X
	//pol.push_back(rem(-1-power(l, w+1, mod), mod)); pol.push_back(1);
	uint64 t0, t1;
	t0 = time();
	for (i0 = 0; i0< phi+1; i0++){
		if (i0%2 != 0) continue;
		for (j0 = 0; j0 < i0+1; j0++){
			if (j0%2 != 0) continue;
			w = i0 + j0;
			pol.clear();
			if (w%18 == 0 or w%18 == 10){
				pol.push_back(72); pol.push_back(0); pol.push_back(1); 
			}
			/*else if (w%18 == 4 or w%18 == 6){
				pol.push_back(45); pol.push_back(0); pol.push_back(1); 
			}
			else if (w%18 == 12 or w%18 == 6){
				pol.push_back(18); pol.push_back(0); pol.push_back(1); 
			}
			else if (w%18 == 2 or w%18 == 8 or w%18 == 14){
				pol.push_back(0); pol.push_back(18); pol.push_back(1); 
			}*/
			mod_solve(i0, j0, p, m, l, pol, 0, H_CREMONA);
			/*if (w%40 == 6){
				mod_solve(i0, j0, p, m, l, pol, 200, H_CREMONA);
			}*/
		}
	}
	t1 = time();
	cout << "TIME = " << t1 - t0 << " ms\n";
